"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CusSupMaster = void 0;
var React = require("react");
//import '../masterStyle.css';
var custom_input_component_1 = require("../../components/custom-input/custom-input.component");
var master_modals_1 = require("../../components/Modals/master.modals");
var master_modals_2 = require("../../components/Modals/master.modals");
var master_modals_3 = require("../../components/Modals/master.modals");
var master_modals_4 = require("../../components/Modals/master.modals");
var master_modals_5 = require("../../components/Modals/master.modals");
function CusSupMaster(_a) {
    var handleChangeField = _a.handleChangeField, bank = _a.bank, branch = _a.branch, currency = _a.currency, masters = _a.masters, handleAddressOptions = _a.handleAddressOptions, opn = _a.opn, title = _a.title, handleSave$Submit = _a.handleSave$Submit, handleAddressTypeChange = _a.handleAddressTypeChange, formDataCollection = _a.formDataCollection, accountType = _a.accountType, otherProps = __rest(_a, ["handleChangeField", "bank", "branch", "currency", "masters", "handleAddressOptions", "opn", "title", "handleSave$Submit", "handleAddressTypeChange", "formDataCollection", "accountType"]);
    return (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "main card firstDiv" },
            React.createElement("div", { className: "text-center card-title col-12", style: { textAlign: 'start', backgroundColor: '#8389d4' } },
                React.createElement("span", { className: "row-header p-0 m-0" }, title)),
            React.createElement("div", { className: "card-body row col-sm-12 m-0 p-0" },
                React.createElement("form", { className: "row-content form col-sm-12 pt-0" },
                    React.createElement("fieldset", { className: "form-group border p-0" },
                        React.createElement("legend", { className: "px-2", "data-toggle": "collapse", "data-target": "#genDetails", "aria-expanded": "true", "aria-controls": "genDetails", style: { fontSize: '1.1rem', cursor: 'pointer' } },
                            "General Details",
                            React.createElement("svg", { className: "ml-1", style: { width: '15px' }, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 448 512" },
                                React.createElement("path", { d: "M384 32H64C28.65 32 0 60.65 0 96v320c0 35.34 28.65 64 64 64h320c35.35 0 64-28.66 64-64V96C448 60.65 419.3 32 384 32zM345.6 232.3l-104 112C237 349.2 230.7 352 224 352s-13.03-2.781-17.59-7.656l-104-112c-6.5-7-8.219-17.19-4.407-25.94C101.8 197.7 110.5 192 120 192h208c9.531 0 18.19 5.656 21.1 14.41C353.8 215.2 352.1 225.3 345.6 232.3z" }))),
                        React.createElement("div", { className: "show", id: "genDetails" },
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "Series", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Series", ipTitle: "Enter Series", dataArray: masters.series, change: handleChangeField }),
                                    React.createElement(master_modals_2.SeriesMasterModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "CodeStr", classCategory: "form-control inp AccountMaster", ipType: "text", label: accountType == "3" ? "Customer Code" : "Supplier Code", ipTitle: accountType == "3" ? "Enter Customer Code" : "Enter Supplier Code", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "Name", classCategory: "form-control inp AccountMaster", ipType: "text", label: accountType == "3" ? "Customer Name" : "Supplier Name", ipTitle: accountType == "3" ? "Enter Customer Name" : "Enter Supplier Name", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null))),
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "PrintName", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Print Name", ipTitle: "Enter Print Name", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "Group", classCategory: "form-control inp AccountMaster", ipType: "text", label: accountType == "3" ? "Customer Group" : "Supplier Group", ipTitle: accountType === "3" ? "Enter Customer Group" : "Enter Supplier Group", dataArray: masters.custGp, change: handleChangeField }),
                                    React.createElement(master_modals_3.CustomerGroupModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement("label", { htmlFor: "MajorProduct", style: { fontSize: '0.8em' }, className: "form-label labl labl2" }, "Major Products"),
                                    React.createElement("select", { name: "MajorProduct", className: "form-control inp AccountMaster", style: { height: '25px' }, title: "Major Products", onBlur: handleChangeField },
                                        React.createElement("option", { value: "1" }, "Y"),
                                        React.createElement("option", { value: "0" }, "N")),
                                    React.createElement(master_modals_1.HiddenModal, null))),
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "DelTerm", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Delivery Terms", ipTitle: "Enter Delievery Terms", dataArray: masters.delT, change: handleChangeField }),
                                    React.createElement(master_modals_4.DelTermsModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "PayTerm", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Payment terms", ipTitle: "Enter Payment Terms", dataArray: masters.payT, change: handleChangeField }),
                                    React.createElement(master_modals_5.PayTermsModal, null)),
                                React.createElement("div", { className: "col-4" })),
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement("label", { htmlFor: "OpBal", style: { fontSize: '0.8em' }, className: "form-label labl labl2" }, "Opening Balance"),
                                    React.createElement("input", { type: "text", name: "OpBal", className: "form-control AccountMaster", style: { width: '18%' }, title: "Opening Balance", onBlur: handleChangeField }),
                                    React.createElement("select", { className: "form-control ml-1", style: {
                                            width: '4%',
                                            height: '25px',
                                            padding: '0px'
                                        } },
                                        React.createElement("option", null, "D(-)"),
                                        React.createElement("option", null, "C(+)"))),
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "cdtAmt", classCategory: "form-control inp ", ipType: "text", label: "Credit Amount", ipTitle: "Enter Credit Amount", dataArray: [] }),
                                    " ",
                                    React.createElement(master_modals_1.HiddenModal, null)),
                                React.createElement("div", { className: "col-4" })),
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "cdtLmt", classCategory: "form-control inp ", ipType: "text", label: "Credit Limit", ipTitle: "Enter Credit Limit", dataArray: [] }),
                                    " ",
                                    React.createElement(master_modals_1.HiddenModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement("label", { htmlFor: "LedgerType", style: { fontSize: '0.8em' }, className: "form-label labl labl2" }, "Ledger Type"),
                                    React.createElement("select", { name: "LedgerType", className: "form-control inp AccountMaster", style: { height: '25px' }, title: "Is Ledger Type", onBlur: handleChangeField },
                                        React.createElement("option", { value: "0" }, "Y"),
                                        React.createElement("option", { value: "1", selected: true }, "N")),
                                    React.createElement(master_modals_1.HiddenModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement("label", { htmlFor: "multiCurr", style: { fontSize: '0.8em' }, className: "form-label labl labl2" }, "Multi Currency"),
                                    React.createElement("select", { name: "multiCurr", className: "form-control inp", style: { height: '25px' }, title: "is Multi Currency" },
                                        " ",
                                        React.createElement("option", { value: "0" }, "Y"),
                                        React.createElement("option", { value: "1", selected: true }, "N")),
                                    React.createElement(master_modals_1.HiddenModal, null)))))),
                React.createElement("div", { className: "row row-content col-12 ", style: { margin: '1em 0%', backgroundColor: 'whitesmoke' } },
                    React.createElement("span", { className: "d-flex align-items-center m-0 p-0" },
                        React.createElement(React.Fragment, null,
                            React.createElement("label", { htmlFor: "PayDate", style: { fontSize: '0.8em', width: '100%', marginLeft: '2em' }, className: "form-label" }, "First Payment Date"),
                            React.createElement("input", { className: "form-control AccountMaster", name: "PayDate", type: "date", onBlur: handleChangeField }),
                            React.createElement(master_modals_1.HiddenModal, null)),
                        React.createElement(React.Fragment, null,
                            React.createElement("label", { htmlFor: "DayFreq", style: { fontSize: '0.8em', width: '100%', marginLeft: '2em' }, className: "form-label " }, "Days Frequency"),
                            React.createElement("input", { type: "text", name: "DayFreq AccountMaster", className: "form-control AccountMaster", title: "Days Frequency", onBlur: handleChangeField }),
                            React.createElement(master_modals_1.HiddenModal, null)))),
                React.createElement("form", { className: "form col-sm-12 row-content card-body pt-0 pb-0" },
                    React.createElement("fieldset", { className: "form-group border p-0" },
                        React.createElement("legend", { className: "px-2", "data-toggle": "collapse", "data-target": "#personalDet", "aria-expanded": "false", "aria-controls": "personalDet", style: { fontSize: '1.1rem', cursor: 'pointer' } },
                            "Personal Details",
                            React.createElement("svg", { className: "ml-1", style: { width: '15px' }, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 448 512" },
                                React.createElement("path", { d: "M384 32H64C28.65 32 0 60.65 0    96v320c0  35.34 28.65 64 64  64h320c35.35 0 64-28.66 64-64V96C448 60.65 419.3 32 384 32zM345.6 232.3l-104 112C237 349.2    230.7 352 224   352s-13.03-2.781-17.59-7.656l-104-112c-6.5-7-8.219-17.19-4.407-25.94C101.8 197.7 110.5 192 120   192h208c9.531  0 18.19 5.656   21.1 14.41C353.8 215.2 352.1 225.3 345.6 232.3z" }))),
                        React.createElement("div", { className: "collapse", id: "personalDet" },
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "PdPerSon", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Contact Person", ipTitle: "Enter Contact  Person", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "PDDesignation", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Designation", ipTitle: "Enter Designation", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null))),
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "PDExe", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Chief Executive", ipTitle: "Enter Chief Executive", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "PDExeTel", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Chief Exe. Tel. No.", ipTitle: "Enter Chief Executive Tel. No.", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null))),
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "PDTel", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Tel. No.", ipTitle: "Tel. No.", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null)),
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "Pdmob", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Mobile No.", ipTitle: "Enter Mobile No.", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null))),
                            React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                React.createElement(React.Fragment, null,
                                    React.createElement(custom_input_component_1.default, { name: "PDEMAIL", classCategory: "form-control inp AccountMaster", ipType: "text", label: "Email", ipTitle: "Enter Email", dataArray: [], change: handleChangeField }),
                                    React.createElement(master_modals_1.HiddenModal, null)))))),
                React.createElement("div", { className: "row row-content col-12 ", style: { margin: '1em 0%', backgroundColor: 'whitesmoke' } },
                    React.createElement("span", { className: "d-flex align-items-center m-0 p-0" },
                        React.createElement(React.Fragment, null,
                            React.createElement("label", { htmlFor: "zone", style: { fontSize: '0.8em', width: '100%', marginLeft: '2em' }, className: "form-label" }, "Address. Options"),
                            React.createElement("select", { name: "zone", className: "form-control", onBlur: handleAddressOptions },
                                React.createElement("option", { style: { fontFamily: "trebuc" }, value: "Corporate", selected: true }, "Corporate"),
                                React.createElement("option", { style: { fontFamily: "trebuc" }, value: "Plant" }, "Plant"),
                                accountType == "3" ? (React.createElement("option", { style: { fontFamily: "trebuc" }, value: "Shipping" }, "Shipping")) : null),
                            React.createElement("svg", { className: "m-0 ml-1 p-0", style: { width: '20px', cursor: 'pointer', visibility: 'hidden' }, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512" },
                                React.createElement("path", { d: "M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 368C269.3 368 280 357.3 280 344V280H344C357.3 280 368 269.3 368 256C368 242.7 357.3 232 344 232H280V168C280 154.7 269.3 144 256 144C242.7 144 232 154.7 232 168V232H168C154.7 232 144 242.7 144 256C144 269.3 154.7 280 168 280H232V344C232 357.3 242.7 368 256 368z" }))))),
                React.createElement("div", { style: { margin: '0', width: '100%', padding: '0' }, id: "addres" },
                    React.createElement("form", { className: "form col-sm-12 row-content card-body pt-0" },
                        React.createElement("fieldset", { className: "form-group border p-0" },
                            React.createElement("legend", { className: "px-2", "data-toggle": "collapse", "data-target": "#contAdd", "aria-expanded": "false", "aria-controls": "personalDet", style: { fontSize: '1.1rem', cursor: 'pointer' } },
                                opn,
                                React.createElement("svg", { className: "ml-1", style: { width: '15px' }, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 448 512" },
                                    React.createElement("path", { d: "M384 32H64C28.65 32 0 60.65 0    96v320c0  35.34 28.65 64 64  64h320c35.35 0 64-28.66 64-64V96C448 60.65 419.3 32 384 32zM345.6 232.3l-104 112C237 349.2    230.7 352 224   352s-13.03-2.781-17.59-7.656l-104-112c-6.5-7-8.219-17.19-4.407-25.94C101.8 197.7 110.5 192 120   192h208c9.531  0 18.19 5.656   21.1 14.41C353.8 215.2 352.1 225.3 345.6 232.3z" }))),
                            opn == "Corporate" ? (React.createElement("div", { className: "collapse", id: "contAdd" },
                                React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "Address1", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Address-1", ipTitle: "Enter Address", dataArray: [], change: handleChangeField, onChange: handleAddressTypeChange(1) }),
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "Address2", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Address-2", ipTitle: "Enter Address", dataArray: [], change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "Address3", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Address-3", ipTitle: "Enter Address", dataArray: [], change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null))),
                                React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "Address4", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Address-4", ipTitle: "Enter Address", dataArray: [], change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "Country", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Country", ipTitle: "Enter Country", dataArray: masters.country, change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "Zone", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Zone", ipTitle: "Enter Zone", dataArray: masters.zone, change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null))),
                                React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "State", classCategory: "form-control inp AddressDetail", ipType: "text", label: "State", ipTitle: "Enter State", dataArray: masters.state, change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "City", classCategory: "form-control inp AddressDetail", ipType: "text", label: "City", ipTitle: "Enter City", dataArray: masters.city, change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "Tel", classCategory: "form-control inp AddressDetail", ipType: "tel", label: "Tel. No.", ipTitle: "Enter Telephone Number", dataArray: [], change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null))),
                                React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "Email", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Email ID", ipTitle: "Enter Email", dataArray: [], change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "PostCode", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Pin Code", ipTitle: "Enter Pin", dataArray: [], change: handleChangeField }),
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "pan", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Pan", ipTitle: "Enter Pan No.", dataArray: [] }),
                                        " ",
                                        React.createElement(master_modals_1.HiddenModal, null))),
                                React.createElement("span", { className: "d-flex section2 col-sm-12" },
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "gst", classCategory: "form-control inp AddressDetail", ipType: "text", label: "GST No.", ipTitle: "Enter GST", dataArray: [] }),
                                        " ",
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "dist", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Distance", ipTitle: "Enter Distance", dataArray: [] }),
                                        " ",
                                        React.createElement(master_modals_1.HiddenModal, null)),
                                    React.createElement(React.Fragment, null,
                                        React.createElement(custom_input_component_1.default, { name: "station", classCategory: "form-control inp AddressDetail", ipType: "text", label: "Station", ipTitle: "Enter Station", dataArray: [] }),
                                        " ",
                                        React.createElement(master_modals_1.HiddenModal, null))))) : null,
                            opn == "Plant" ? (React.createElement("div", { className: "collapse", id: "contAdd" },
                                React.createElement("table", { id: "plantAddress", className: "table table-responsive table-striped table-bordered table-sm", style: {
                                        width: "100%"
                                    } },
                                    React.createElement("thead", null,
                                        React.createElement("tr", null,
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "S.No"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "P/L"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Plant Name"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Address 1"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Address 2"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Country"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Zone"))),
                                    React.createElement("tbody", null,
                                        React.createElement("tr", null,
                                            React.createElement("th", null, "1"),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Accounttype", className: "form-control inp AddressDetail", type: "tel", title: "Enter P/L", onBlur: handleChangeField, style: { width: '300px' }, onChange: handleAddressTypeChange(2), required: true })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Name", className: "form-control inp AddressDetail", type: "tel", title: "Enter Plant Name", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Address1", className: "form-control inp AddressDetail", type: "tel", title: "Enter Address Line 1", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Address2", className: "form-control inp AddressDetail", type: "tel", title: "Enter Address Line 2", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Country", className: "form-control inp AddressDetail", type: "tel", title: "Enter Country", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Zone", className: "form-control inp AddressDetail", type: "tel", title: "Enter Zone", onBlur: handleChangeField, style: { width: '300px' } }))))))) : null,
                            opn == "Shipping" ? (React.createElement("div", { className: "collapse", id: "contAdd" },
                                React.createElement("table", { id: "shippingAddress", className: "table table-responsive table-striped table-bordered table-sm", style: {
                                        width: "100%"
                                    } },
                                    React.createElement("thead", null,
                                        React.createElement("tr", null,
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "S.No"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "PAN"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Address Line 1"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Address Line 2"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Address Line 3"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Address Line 4"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Country"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Zone"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "State"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "City"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Post Code"),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Tel No."),
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "GST"),
                                            " ",
                                            React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Distance"),
                                            " ")),
                                    React.createElement("tbody", null,
                                        React.createElement("tr", null,
                                            React.createElement("th", null, "1"),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "PAN", className: "form-control inp AddressDetail", type: "text", title: "Enter PAN No.", style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Address1", className: "form-control inp AddressDetail", type: "text", title: "Enter Address", onBlur: handleChangeField, style: { width: '300px' }, onChange: handleAddressTypeChange(3), required: true })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Address2", className: "form-control inp AddressDetail", type: "text", title: "Enter Address", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Address3", className: "form-control inp AddressDetail", type: "text", title: "Enter Address", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Address4", className: "form-control inp AddressDetail", type: "text", title: "Enter Address", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Country", className: "form-control inp AddressDetail", type: "text", title: "Enter Country", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Zone", className: "form-control inp AddressDetail", type: "text", title: "Enter Zone", style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "State", className: "form-control inp AddressDetail", type: "text", title: "Enter State", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "City", className: "form-control inp AddressDetail", type: "text", title: "Enter City", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "PostCode", className: "form-control inp AddressDetail", type: "text", title: "Enter Post Code", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Tel", className: "form-control inp AddressDetail", type: "text", title: "Enter Telephone", onBlur: handleChangeField, style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "GST", className: "form-control inp AddressDetail", type: "text", title: "Enter GST", style: { width: '300px' } })),
                                            React.createElement("td", null,
                                                React.createElement("input", { name: "Distance", className: "form-control inp AddressDetail", type: "text", title: "Enter Distance", style: { width: '300px' } }))))))) : null))),
                React.createElement("hr", { style: { margin: '0', padding: '0' } }),
                React.createElement("div", { className: "row card row-content col-sm-12 addSaleForm container container-fluid container-lg mb-3" },
                    React.createElement("div", { className: "card-body col-sm-12 addCustomer container container-fluid container-lg", style: { overflowX: 'auto', overflowY: 'auto' } },
                        React.createElement("div", { style: { display: 'flex', justifyContent: 'center', alignItems: 'center', borderBottom: '1px solid grey', backgroundColor: '#8389d4', margin: '0', padding: '0', width: '100%' } },
                            React.createElement("span", { className: "card-title", style: { fontSize: '15px', margin: '0', padding: '0' } }, "Bank Details")),
                        React.createElement("table", { id: "dtHorizontalExample", className: "table table-responsive table-striped table-bordered table-sm", style: {
                                width: "100%"
                            } },
                            React.createElement("thead", null,
                                React.createElement("tr", null,
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "S.No"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "PAN"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Name of the Bank"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Branch"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "A/C No."),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "A/C Type"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Swift Code"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "IFSC Code"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Currency"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Country"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "GST"),
                                    React.createElement("th", { className: "text-center", style: { fontWeight: 400, backgroundColor: 'grey', color: 'white' } }, "Distance"))),
                            React.createElement("tbody", null,
                                React.createElement("tr", null,
                                    React.createElement("th", null, "1"),
                                    React.createElement("td", null,
                                        React.createElement("input", { type: "text", style: { width: '300px' } })),
                                    " ",
                                    React.createElement("td", null,
                                        React.createElement("input", { name: "Name", className: "form-control inp BankDetail", type: "text", title: "Select Bank Name", onBlur: handleChangeField, style: { width: '300px' }, list: "bankNameList" }),
                                        bank != null && bank.length > 0 ?
                                            (React.createElement("datalist", { className: 'bankNameList', id: 'bankNameList' }, bank.map(function (obj) {
                                                return React.createElement("option", { value: obj.code }, obj.name);
                                            })))
                                            : null),
                                    React.createElement("td", null,
                                        "  ",
                                        React.createElement("input", { name: "Address", className: "form-control inp BankDetail", type: "text", title: "Select Branch Name", onBlur: handleChangeField, style: { width: '300px' }, list: "branchNameList" }),
                                        branch != null && branch.length > 0 ?
                                            (React.createElement("datalist", { className: 'branchNameList', id: 'branchNameList' }, branch.map(function (obj) {
                                                return React.createElement("option", { value: obj.code }, obj.name);
                                            })))
                                            : null),
                                    React.createElement("td", null,
                                        "  ",
                                        React.createElement("input", { name: "ACNo", className: "form-control inp BankDetail", type: "text", title: "Enter Account No.", onBlur: handleChangeField, style: { width: '300px' } })),
                                    React.createElement("td", null,
                                        "  ",
                                        React.createElement("input", { name: "ACType", className: "form-control inp BankDetail", type: "text", title: "Select Branch Name", onBlur: handleChangeField, style: { width: '300px' } })),
                                    React.createElement("td", null,
                                        "  ",
                                        React.createElement("input", { name: "SwiftCode", className: "form-control inp BankDetail", type: "text", title: "Select Branch Name", onBlur: handleChangeField, style: { width: '300px' } })),
                                    React.createElement("td", null,
                                        "  ",
                                        React.createElement("input", { name: "IFSCCode", className: "form-control inp BankDetail", type: "text", title: "Select Branch Name", onBlur: handleChangeField, style: { width: '300px' } })),
                                    React.createElement("td", null,
                                        " ",
                                        React.createElement("input", { name: "Currency", className: "form-control inp BankDetail", type: "text", title: "Select Currency Name", onBlur: handleChangeField, style: { width: '300px' }, list: "currNameList" }),
                                        currency != null && currency.length > 0 ?
                                            (React.createElement("datalist", { className: 'currency-name-list', id: 'currNameList' }, currency.map(function (obj) {
                                                return React.createElement("option", { value: obj.code }, obj.name);
                                            })))
                                            : null),
                                    React.createElement("td", null,
                                        " ",
                                        React.createElement("input", { name: "Country", className: "form-control inp BankDetail", type: "text", title: "Select Country Name", onBlur: handleChangeField, style: { width: '300px' }, list: "countryList" }),
                                        masters.country != null && currency.length > 0 ?
                                            (React.createElement("datalist", { id: 'countryList' }, masters.country.map(function (obj) {
                                                return React.createElement("option", { value: obj.code }, obj.name);
                                            })))
                                            : null),
                                    React.createElement("td", null,
                                        " ",
                                        React.createElement("input", { name: "SwiftCode", className: "form-control inp BankDetail", type: "text", title: "Select Branch Name", style: { width: '300px' } })),
                                    " ",
                                    React.createElement("td", null,
                                        " ",
                                        React.createElement("input", { name: "SwiftCode", className: "form-control inp BankDetail", type: "text", title: "Select Branch Name", style: { width: '300px' } }))))))),
                React.createElement("hr", { style: { margin: '0', padding: '0' } }),
                React.createElement("div", { className: "row row-content col-sm-12 addSaleForm container container-fluid container-lg" },
                    accountType == "3" ? (React.createElement("div", { className: "card col-sm-5", style: { padding: '0', margin: '0' } },
                        React.createElement("div", { style: { display: 'flex', justifyContent: 'center', alignItems: 'center', borderBottom: '1px solid grey', backgroundColor: '#8389d4', margin: '0', padding: '0' } },
                            React.createElement("span", { className: "card-title", style: { fontSize: '15px', margin: '0', padding: '0' } }, "Last 3 Yrs. TurnOver")),
                        React.createElement("div", { className: "card-body table-responsive", style: { margin: '0', padding: '0' } },
                            React.createElement("table", { className: "table table-striped table-bordered table-hover table-sm", style: { margin: '0' } },
                                React.createElement("thead", { className: "thead-light table-secondary text-center" },
                                    React.createElement("tr", null,
                                        React.createElement("th", null, "S. No"),
                                        React.createElement("th", null, "Year"),
                                        React.createElement("th", null, "TurnOver(Lacks)"))),
                                React.createElement("tbody", null,
                                    React.createElement("tr", null,
                                        React.createElement("th", { scope: "row" }, "1"),
                                        React.createElement("td", null,
                                            " ",
                                            React.createElement("input", { name: "Year1", className: "form-control inp AccountMaster", type: "text", title: "Enter Year No.", onBlur: handleChangeField, style: { width: '70px', margin: 'auto' } })),
                                        React.createElement("td", null,
                                            " ",
                                            React.createElement("input", { name: "TurnOver1", className: "form-control inp AccountMaster", type: "text", title: "Enter Turnover 1", onBlur: handleChangeField, style: { width: '120px', margin: 'auto' } }))),
                                    React.createElement("tr", null,
                                        React.createElement("th", { scope: "row" }, "2"),
                                        React.createElement("td", null,
                                            React.createElement("input", { name: "Year2", className: "form-control inp AccountMaster", type: "text", title: "Enter Year No.", onBlur: handleChangeField, style: { width: '70px', margin: 'auto' } })),
                                        React.createElement("td", null,
                                            React.createElement("input", { name: "TurnOver2", className: "form-control inp AccountMaster", type: "text", title: "Enter Year No.", onBlur: handleChangeField, style: { width: '120px', margin: 'auto' } }))),
                                    React.createElement("tr", null,
                                        React.createElement("th", { scope: "row" }, "3"),
                                        React.createElement("td", null,
                                            React.createElement("input", { name: "Year3", className: "form-control inp AccountMaster", type: "text", title: "Enter Year No.", onBlur: handleChangeField, style: { width: '70px', margin: 'auto' } })),
                                        React.createElement("td", null,
                                            React.createElement("input", { name: "TurnOver3", className: "form-control inp AccountMaster", type: "text", title: "Enter Year No.", onBlur: handleChangeField, style: { width: '120px', margin: 'auto' } })))))))) : null,
                    React.createElement("div", { className: "card col-sm-6", style: { padding: '0', margin: '0' } },
                        React.createElement("div", { style: { display: 'flex', justifyContent: 'center', alignItems: 'center', borderBottom: '1px solid grey', backgroundColor: '#8389d4', margin: '0', padding: '0' } },
                            React.createElement("span", { className: "card-title", style: { fontSize: '15px', margin: '0', padding: '0' } }, "Additional Docs")),
                        React.createElement("div", { className: "card-body col-12", style: { margin: '0', padding: '0' } },
                            React.createElement("span", { className: "d-flex col-sm-12 m-0 pl-0 pr-0" },
                                React.createElement(React.Fragment, null,
                                    React.createElement("label", { htmlFor: "empName", style: { fontSize: '0.8em' }, className: "form-label col-3 labl2 labl" }, "Data Collected By"),
                                    React.createElement("input", { type: "text", name: "empName", className: "form-control inp" })),
                                React.createElement(React.Fragment, null,
                                    React.createElement("label", { htmlFor: "date", style: { fontSize: '0.8em' }, className: "form-label labl2 labl" }, "Date"),
                                    React.createElement("input", { type: "date", style: { fontSize: '0.8em' }, name: "date", className: "form-control inp" }))),
                            React.createElement("span", { className: "d-flex col-sm-10 m-0 pl-0 pr-0" },
                                React.createElement(React.Fragment, null,
                                    React.createElement("label", { htmlFor: "docs", style: { fontSize: '0.8em' }, className: "form-label ml-2" }, "Upload Docs"),
                                    React.createElement("input", { type: "file", name: "docs" })),
                                React.createElement("span", null,
                                    React.createElement("button", { type: "button" }, "Remove"))))))),
            React.createElement("hr", { style: { margin: '0', padding: '0' } })),
        React.createElement("div", { className: "btn-group col-12 mt-3", style: { display: 'flex', justifyContent: 'flex-end', alignItems: 'center' } },
            React.createElement("button", { type: "button", style: { border: '2px solid #33b5e5', letterSpacing: 3 }, className: "btn btn-info pl-0 pr-0" }, "Save"),
            React.createElement("button", { type: "button", style: { border: '2px solid green', letterSpacing: 3 }, className: "btn btn-success mr-2 ml-2 pl-0 pr-0 ", onClick: handleSave$Submit }, "Save & Submit"),
            React.createElement("button", { type: "button", style: { border: '2px solid red', letterSpacing: 3 }, className: "btn btn-danger pl-0 pr-0" }, "Quit"))));
}
exports.CusSupMaster = CusSupMaster;
//# sourceMappingURL=add-customer-supplier-master.component.js.map